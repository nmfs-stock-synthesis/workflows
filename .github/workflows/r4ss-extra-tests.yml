# Extra run of r4ss tests, when exe and models in ss-test-models are available.workflow_call
# stored in this repo because only applicable to ss3 (and in particular r4ss)

on:
  workflow_call:

name: run-tests
jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, r: 'release', rspm: 'https://packagemanager.rstudio.com/cran/__linux__/focal/latest'}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("devtools")
        shell: Rscript {0}

      - name: Get repository of SS models
        uses: actions/checkout@v2
        with:
          repository: 'nmfs-stock-synthesis/ss-test-models'
          path: ss-test-models-repo

      - name: move the models to the desired location
        run: |
          mv ss-test-models-repo/models inst/extdata
          rm  -rf ss-test-models-repo
          ls inst/extdata

      - name: Get the 3.30.18 SS3 executable and move to expected location
        run: |
          wget -O ss https://github.com/k-doering-NOAA/updated_ss_help/releases/download/test/ss_linux
          sudo chmod a+x ss
          cp ss inst/extdata/simple_3.30.12/ss
          cp ss inst/extdata/simple_3.30.13/ss
          rm ss

      - name: Get a 3.24 SS executable
        run: |
          wget -O ss https://vlab.noaa.gov/documents/259399/2000201/ss_3.24Z/037e3921-1f00-611a-1c30-d7a5c1063835?version=1.1&t=1608655599519&download=true
          sudo chmod a+x ss
          mv ss inst/extdata/simple_3.24/ss

      - name: Test
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: devtools::test()
        shell: Rscript {0}
